m[1000] = 10
m[1001] = 12
m[1002] = 9
m[1003] = 15
m[1004] = 20
m[1005] = 14
m[1006] = 17
m[1007] = 99
m[1008] = 152
m[1009] = 30

m[0] = 9 // size-1

	add R1, R0, R0 // R1 -> i
0	000000 00000 00000 00001 00000 100000
	lw R2, 1000(R1) // R2 -> A[i+1000]
1	100011 00001 00010 00000 01111 101000
	add R3, R2, R0  //R3-> max
2	000000 00010 00000 00011 00000 100000
	lw R4, 0(R0) //R4 -> size = 5
3	100011 00000 00100 00000 00000 000000
	Loop: slt R5, R1, R4 //R5 -> flag for for
4	000000 00001 00100 00101 00000 101010
	nop // R5 DataHazard
5	000000 00000 00000 00000 00000 000000
	beq R5, R0, 7(ExitLoop)
6	000100 00101 00000 00000 00000 000111
	add R1, R1, R5 // R1++
7	000000 00001 00101 00001 00000 100000
	lw R2, 1000(R1)
8	100011 00001 00010 00000 01111 101000
	slt R6, R3, R2 // R6 -> flag for max
9	000000 00011 00010 00110 00000 101010
	nop // R6 DataHazard
10	000000 00000 00000 00000 00000 000000
	beq R6, R0, -8(Loop)
11	000100 00110 00000 11111 11111 111000
	add R3, R2, R0
12	000000 00010 00000 00011 00000 100000
	j Loop
13	000010 00000 00000 00000 00000 000100
	ExitLoop: sw R3, 1010(R0)
14	101011 00000 00011 00000 01111 110010